import axios from "axios";
import { PrismaClient } from "@prisma/client";
import { keyManager } from "./keyManager";
import { logger } from "../utils/logger";

export const sauceNaoService = {
  async search(prisma: PrismaClient, imageUrl: string): Promise<string> {
    try {
      const sauceKey = await keyManager.getAvailableKey(prisma, "SAUCENAO");
      if (!sauceKey) return "–õ–∏–º–∏—Ç –∫–ª—é—á–µ–π SauceNAO –∏—Å—á–µ—Ä–ø–∞–Ω.";
      const scraperKey = await keyManager.getAvailableKey(prisma, "SCRAPER");
      if (!scraperKey) return "–õ–∏–º–∏—Ç –∫–ª—é—á–µ–π ScraperAPI –∏—Å—á–µ—Ä–ø–∞–Ω.";

      const sauceNAOUrl = `https://saucenao.com/search.php?db=999&output_type=2&numres=1&url=${encodeURIComponent(imageUrl)}&api_key=${sauceKey.apiKey}`;
      logger.info(`–ü–æ–ª–Ω—ã–π URL SauceNAO: ${sauceNAOUrl}`);
      const response = await axios.get(
        `http://api.scraperapi.com?api_key=${scraperKey.apiKey}&url=${encodeURIComponent(sauceNAOUrl)}`,
      );

      const data = response.data;
      if (typeof data === "string" && data.includes("<!DOCTYPE html")) {
        logger.error(
          "HTML-–æ—Ç–≤–µ—Ç –æ—Ç SauceNAO, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –∏–ª–∏ –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω:",
          data.slice(0, 200),
        );
        await prisma.$transaction(async (tx) => {
          await keyManager.updateRemaining(tx, sauceKey.id, "SAUCENAO", 0);
          await keyManager.updateRemaining(tx, scraperKey.id, "SCRAPER");
        });
        return "–û—à–∏–±–∫–∞: SauceNAO –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É. –í–æ–∑–º–æ–∂–Ω–æ, –ª–∏–º–∏—Ç –∫–ª—é—á–µ–π –∏—Å—á–µ—Ä–ø–∞–Ω.";
      }

      const longRemaining =
        data.header?.long_remaining ?? sauceKey.longRemaining;
      await prisma.$transaction(async (tx) => {
        await keyManager.updateRemaining(
          tx,
          sauceKey.id,
          "SAUCENAO",
          longRemaining,
        );
        await keyManager.updateRemaining(tx, scraperKey.id, "SCRAPER");
      });

      if (data.header?.status !== 0) {
        const message = data.header?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
        logger.error(
          `–û—à–∏–±–∫–∞ API SauceNAO: ${message}, –æ—Å—Ç–∞—Ç–æ–∫: ${longRemaining}`,
        );
        return `–û—à–∏–±–∫–∞ API SauceNAO: ${message}. –û—Å—Ç–∞—Ç–æ–∫: ${longRemaining}/100.`;
      }

      if (data.results?.length > 0) {
        const result = data.results[0];
        const header = result.header || {};
        const dataResult = result.data || {};

        const similarity = header.similarity || "N/A";
        const title = dataResult.title || dataResult.source || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        const urls = dataResult.ext_urls?.join(", ") || "–ù–µ—Ç —Å—Å—ã–ª–æ–∫";
        const author =
          dataResult.author || dataResult.member_name || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω";
        const part = dataResult.part || "N/A";
        const year = dataResult.year || "N/A";
        const estTime = dataResult.est_time || "N/A";
        const imdbId = dataResult.imdb_id || "N/A";
        const indexName = header.index_name || "N/A";
        const thumbnail = header.thumbnail || "N/A";

        return (
          "<b>üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –Ω–∞ SauceNAO:</b>\n" +
          `<b>üìä –°—Ö–æ–¥—Å—Ç–≤–æ:</b> ${similarity}%\n` +
          `<b>üìú –ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${title}\n` +
          `<b>üåê –°—Å—ã–ª–∫–∏:</b> ${urls}\n` +
          `<b>‚úçÔ∏è –ê–≤—Ç–æ—Ä:</b> ${author}\n` +
          `<b>üé¨ –°–µ–∑–æ–Ω/–≠–ø–∏–∑–æ–¥:</b> ${part}\n` +
          `<b>üìÖ –ì–æ–¥:</b> ${year}\n` +
          `<b>‚è∞ –¢–∞–π–º–∏–Ω–≥:</b> ${estTime}\n` +
          `<b>üé• IMDB ID:</b> ${imdbId}\n` +
          `<b>üìÇ –ò—Å—Ç–æ—á–Ω–∏–∫:</b> ${indexName}\n` +
          `<b>üñºÔ∏è –ú–∏–Ω–∏–∞—Ç—é—Ä–∞:</b> ${thumbnail}\n` +
          `<b>üìà –û—Å—Ç–∞—Ç–æ–∫ –ª–∏–º–∏—Ç–∞ SauceNAO:</b> ${longRemaining}/100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å`
        );
      }

      return `–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –û—Å—Ç–∞—Ç–æ–∫ –ª–∏–º–∏—Ç–∞ SauceNAO: ${longRemaining}/100.`;
    } catch (error: any) {
      logger.error("–û—à–∏–±–∫–∞ –≤ sauceNaoService:", error.message, error.stack);
      return `–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${error.message || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`;
    }
  },
};
