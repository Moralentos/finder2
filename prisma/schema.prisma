generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  telegramId String   @unique
  username   String?
  status     UserStatus @default(ORDINARY)
  createdAt  DateTime @default(now())
  usages     Usage[]

  @@map("users")
  @@index([telegramId])
}

model ApiKey {
  id            String   @id @default(uuid())
  type          KeyType
  apiKey        String   @unique
  longRemaining Int      @default(100) // Для SAUCENAO: остаток запросов, для SCRAPER: примерный остаток
  isActive      Boolean  @default(true)
  isNew         Boolean  @default(true) // Только для SCRAPER
  createdAt     DateTime @default(now())

  @@map("api_keys")
  @@index([type, isActive])
}

model Usage {
  id        String   @id @default(uuid())
  userId    String
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("usages")
  @@index([userId, timestamp])
}

enum UserStatus {
  ORDINARY
  PREMIUM
  ADMIN
}

enum KeyType {
  SAUCENAO
  SCRAPER
}